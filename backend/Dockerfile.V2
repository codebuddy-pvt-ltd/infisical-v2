# Base image
FROM node:20-alpine

# Set the working directory
WORKDIR /app

# Copy package files and install production dependencies
COPY package*.json ./
RUN npm ci --only-production

# Copy the rest of the application files
COPY . .

# Build the application
RUN npm run build

# Install additional tools and setup environment
RUN apk add --no-cache bash curl && curl -1sLf \
  'https://dl.cloudsmith.io/public/infisical/infisical-cli/setup.alpine.sh' | bash \
  && apk add infisical=0.8.1 && apk add --no-cache git

# Set environment variable for npm cache location
ENV npm_config_cache=/home/node/.npm

# Health check
HEALTHCHECK --interval=10s --timeout=3s --start-period=10s \  
  CMD node healthcheck.js

# Set environment variable for host
ENV HOST=0.0.0.0

# Expose the application port
EXPOSE 4000

ARG ENCRYPTION_KEY
ENV ENCRYPTION_KEY $ENCRYPTION_KEY
ARG AUTH_SECRET
ENV AUTH_SECRET $AUTH_SECRET
ARG POSTGRES_PASSWORD
ENV POSTGRES_PASSWORD $POSTGRES_PASSWORD
ARG POSTGRES_USER
ENV POSTGRES_USER $POSTGRES_USER
ARG POSTGRES_DB
ENV POSTGRES_DB $POSTGRES_DB
ARG DB_CONNECTION_URI
ENV DB_CONNECTION_URI $DB_CONNECTION_URI
ARG REDIS_URL
ENV REDIS_URL $REDIS_URL
ARG SITE_URL
ENV SITE_URL $SITE_URL
ARG SMTP_HOST
ENV SMTP_HOST $SMTP_HOST
ARG SMTP_PORT
ENV SMTP_PORT $SMTP_PORT
ARG SMTP_FROM_NAME
ENV SMTP_FROM_NAME $SMTP_FROM_NAME
ARG SMTP_FROM_ADDRESS
ENV SMTP_FROM_ADDRESS $SMTP_FROM_ADDRESS
ARG SMTP_USERNAME
ENV SMTP_USERNAME $SMTP_USERNAME
ARG SMTP_PASSWORD
ENV SMTP_PASSWORD $SMTP_PASSWORD

# Run migrations
RUN npm run migration:latest

# Default command to run the application
CMD ["npm", "start"]